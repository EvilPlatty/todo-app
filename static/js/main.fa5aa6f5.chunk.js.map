{"version":3,"sources":["logo.svg","Listitems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,I,2BC+BAA,MA1Bf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACA,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAC5BC,MAAOL,EAAKM,KACZC,SAAW,SAACC,GAAD,OAAOZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAEvD,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAU,kBAAMhB,EAAMiB,WAAWb,EAAKI,cARZJ,EAAKI,QAa/C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACKlB,O,eClBjBmB,IAAQC,IAAIC,K,IAsFGC,E,kDAnFb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAM,CACTtB,MAAO,GACPuB,YAAY,CACVf,KAAM,GACNF,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,wDAgBNf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,8BAKPpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACO,KAAhBA,EAAQxB,KAAW,CACpB,IAAM2B,EAAS,GAAD,mBAAKR,KAAKL,MAAMtB,OAAhB,CAAuBgC,IACrCL,KAAKC,SAAS,CACZ5B,MAAMmC,EACNZ,YAAa,CACXf,KAAK,GACLF,IAAI,S,iCAODA,GACT,IAAM8B,EAAgBT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,MAAMA,KACjEqB,KAAKC,SAAS,CACZ5B,MAAMoC,M,gCAIA5B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAIdmB,KAAKC,SAAS,CACZ5B,MAAOA,M,+BAMT,OACE,iCACE,sBAAKG,UAAU,MAAf,UACA,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,oBAC/BhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACf,wBAAQpB,KAAK,SAAb,sBAEF,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAAOe,WAAcY,KAAKZ,WACzDJ,UAAagB,KAAKhB,qB,GA3ER6B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa5aa6f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Listitems.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move'\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n        {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>\r\n                <input type=\"text\" id={item.key} \r\n                value={item.text}\r\n                onChange={ (e) => props.setUpdate(e.target.value, item.key)}\r\n                />    \r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon='trash'\r\n                    onClick={ () => props.deleteItem(item.key) } />\r\n                </span></p>\r\n                \r\n                </div>\r\n        })\r\n    return(\r\n        <div>\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {listItems}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListItems from './Listitems.js';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      items: [],\n      currentItem:{\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value, \n        key:Date.now()\n      }\n    })\n  }\n  \n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text !==\"\"){\n      const newItems=[...this.state.items, newItem];\n      this.setState({\n        items:newItems,\n        currentItem: {\n          text:'',\n          key:''\n        }\n      })\n    }\n\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n  }\n\n  setUpdate(text, key){\n    const items = this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n\n    this.setState({\n      items: items\n   \n    })\n  }\n  \n  render(){\n    return(\n      <header>\n        <div className=\"App\">\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"2 Minute Activity\" \n          value={this.state.currentItem.text}\n          onChange={this.handleInput}/>\n          <button type=\"submit\"> Add </button>\n        </form>\n        <ListItems items = {this.state.items} deleteItem = {this.deleteItem}\n        setUpdate = {this.setUpdate}\n        ></ListItems>\n        </div>\n        \n      </header>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}